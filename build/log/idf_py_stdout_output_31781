[1/11] Building C object esp-idf/driver_gpio/CMakeFiles/__idf_driver_gpio.dir/driver_gpio.c.obj
[2/11] Performing build step for 'bootloader'
[1/1] cd /home/ynghia/CODE/IDF/vinfast/build/bootloader/esp-idf/esptool_py && /home/ynghia/.espressif/python_env/idf5.1_py3.8_env/bin/python /home/ynghia/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/ynghia/CODE/IDF/vinfast/build/bootloader/bootloader.bin
Bootloader binary size 0x6870 bytes. 0x790 bytes (7%) free.
[3/9] Building C object esp-idf/admin_into_setup/CMakeFiles/__idf_admin_into_setup.dir/admin_into_setup.c.obj
[4/9] Linking C static library esp-idf/admin_into_setup/libadmin_into_setup.a
[5/9] Linking C static library esp-idf/driver_gpio/libdriver_gpio.a
[6/9] Generating ld/sections.ld
[7/9] Linking CXX executable vinfast.elf
[8/9] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32 image...
Merged 27 ELF sections
Successfully created esp32 image.
Generated /home/ynghia/CODE/IDF/vinfast/build/vinfast.bin
[9/9] cd /home/ynghia/CODE/IDF/vinfast/build/esp-idf/esptool_py && /home/ynghia/.espressif/python_env/idf5.1_py3.8_env/bin/python /home/ynghia/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/ynghia/CODE/IDF/vinfast/build/partition_table/partition-table.bin /home/ynghia/CODE/IDF/vinfast/build/vinfast.bin
vinfast.bin binary size 0xe7570 bytes. Smallest app partition is 0x100000 bytes. 0x18a90 bytes (10%) free.
