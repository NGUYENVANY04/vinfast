[1/10] Performing build step for 'bootloader'
[1/1] cd /home/ynghia/CODE/IDF/vinfast/build/bootloader/esp-idf/esptool_py && /home/ynghia/.espressif/python_env/idf5.1_py3.8_env/bin/python /home/ynghia/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/ynghia/CODE/IDF/vinfast/build/bootloader/bootloader.bin
Bootloader binary size 0x6870 bytes. 0x790 bytes (7%) free.
[2/8] Building C object esp-idf/admin_into_setup/CMakeFiles/__idf_admin_into_setup.dir/admin_into_setup.c.obj
[3/8] Linking C static library esp-idf/admin_into_setup/libadmin_into_setup.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable vinfast.elf
[6/8] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/ynghia/CODE/IDF/vinfast/build/vinfast.bin
[7/8] cd /home/ynghia/CODE/IDF/vinfast/build/esp-idf/esptool_py && /home/ynghia/.espressif/python_env/idf5.1_py3.8_env/bin/python /home/ynghia/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/ynghia/CODE/IDF/vinfast/build/partition_table/partition-table.bin /home/ynghia/CODE/IDF/vinfast/build/vinfast.bin
vinfast.bin binary size 0x2cdc0 bytes. Smallest app partition is 0x100000 bytes. 0xd3240 bytes (82%) free.
[7/8] cd /home/ynghia/esp/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/ynghia/esp/esp-idf -D "SERIAL_TOOL=/home/ynghia/.espressif/python_env/idf5.1_py3.8_env/bin/python;;/home/ynghia/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/ynghia/CODE/IDF/vinfast/build -P /home/ynghia/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32 -p /dev/ttyUSB0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 vinfast.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.0
Serial port /dev/ttyUSB0
Connecting......
Chip is ESP32-D0WDQ6 (revision v1.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 58:bf:25:34:32:8c
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Traceback (most recent call last):
  File "/home/ynghia/.espressif/python_env/idf5.1_py3.8_env/lib/python3.8/site-packages/esptool/__init__.py", line 1139, in _main
    main()
  File "/home/ynghia/.espressif/python_env/idf5.1_py3.8_env/lib/python3.8/site-packages/esptool/__init__.py", line 886, in main
    esp.flash_set_parameters(flash_size_bytes(flash_size))
  File "/home/ynghia/.espressif/python_env/idf5.1_py3.8_env/lib/python3.8/site-packages/esptool/loader.py", line 1231, in flash_set_parameters
    self.check_command(
  File "/home/ynghia/.espressif/python_env/idf5.1_py3.8_env/lib/python3.8/site-packages/esptool/loader.py", line 467, in check_command
    val, data = self.command(op, data, chk, timeout=timeout)
  File "/home/ynghia/.espressif/python_env/idf5.1_py3.8_env/lib/python3.8/site-packages/esptool/loader.py", line 436, in command
    p = self.read()
  File "/home/ynghia/.espressif/python_env/idf5.1_py3.8_env/lib/python3.8/site-packages/esptool/loader.py", line 369, in read
    return next(self._slip_reader)
StopIteration

A fatal error occurred: The chip stopped responding.
FAILED: CMakeFiles/flash 
cd /home/ynghia/esp/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/ynghia/esp/esp-idf -D "SERIAL_TOOL=/home/ynghia/.espressif/python_env/idf5.1_py3.8_env/bin/python;;/home/ynghia/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/ynghia/CODE/IDF/vinfast/build -P /home/ynghia/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
ninja: build stopped: subcommand failed.
